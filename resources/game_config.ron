(
    // /// The amount of gravity in the system.
    // ///
    // /// The units of this are unclear, so the
    // /// default value is figured out by feel.
    // #[serde(default="default_gravity_acceleration")]
    // pub gravity_acceleration: f32,
    gravity_acceleration: -98.0,
    // /// The z-position of the camera
    // #[serde(default="default_camera_z_position")]
    // pub camera_z_position: f32,
    // /// The z position of invisible sprites
    // ///
    // /// This needs to be > camera_z_position
    // /// to actually hide the sprite
    // /// and also a value that will not be
    // /// used for anything other than hiding sprites
    // #[serde(default="default_hidden_z_position")]
    // pub hidden_z_position: f32,
    // /// The default position of visible sprites
    // ///
    // /// This needs to be < camera_z_position
    // /// to show the sprite.
    // #[serde(default="default_visible_z_position")]
    // pub visible_z_position: f32,
    // /// The position of the background sprite
    // /// relative to the screen width
    // /// (i.e. from 0.0 left to 0.1 right).
    // #[serde(default="default_background_rel_x_position")]
    // pub background_rel_x_position: f32,
    // /// The position of the background sprite
    // /// relative to the screen height
    // /// (i.e. from 0.0 bottom to 0.1 top).
    // #[serde(default="default_background_rel_y_position")]
    // pub background_rel_y_position: f32,
    // /// The z position of the background sprite
    // ///
    // /// This needs to be < visible_z_position
    // #[serde(default="default_background_z_position")]
    // pub background_z_position: f32,
    // /// The scale of the background image
    // #[serde(default="default_background_scale")]
    // pub background_scale: f32,
    // /// The name of the file containing our player (hopper) sprite
    // #[serde(default="default_hopper_sprite_name")]
    // pub hopper_sprite_name: String,
    // /// The width of the hopper collision rectangle
    // #[serde(default="default_hopper_collision_rectangle_width")]
    // pub hopper_collision_rectangle_width: f32,
    // /// The height of the hopper collision rectangle
    // #[serde(default="default_hopper_collision_rectangle_height")]
    // pub hopper_collision_rectangle_height: f32,
    // /// The name of the file containing our rooftop sprite
    // #[serde(default="default_rooftop_sprite_name")]
    // pub rooftop_sprite_name: String,
    // /// The width of the rooftop collision rectangle
    // #[serde(default="default_rooftop_collision_rectangle_width")]
    // pub rooftop_collision_rectangle_width: f32,
    // /// The height of the rooftop collision rectangle
    // #[serde(default="default_rooftop_collision_rectangle_height")]
    // pub rooftop_collision_rectangle_height: f32,
    // /// The x offset of the rooftop collision rectangle
    // #[serde(default="default_rooftop_collision_rectangle_offset_x")]
    // pub rooftop_collision_rectangle_offset_x: f32,
    // /// The y offset of the rooftop collision rectangle
    // #[serde(default="default_rooftop_collision_rectangle_offset_y")]
    // pub rooftop_collision_rectangle_offset_y: f32,
    // /// How hard to jump when the jump button pressed
    // #[serde(default="default_jump_force")]
    // pub jump_force: f32,
    // /// How much to force left/right when the appropriate button pressed
    // #[serde(default="default_sideways_force")]
    // pub sideways_force: f32,
    // /// How far below the screen the hopper needs to be
    // /// before it is out of bounds
    // #[serde(default="default_hopper_lower_y_boundary")]
    // pub hopper_lower_y_boundary: f32,
    // /// Number of frames to debounce the hopper
    // #[serde(default="default_debouncing_frame_count")]
    // pub debouncing_frame_count: u32,
    // /// Max portion of the jump force per frame
    // #[serde(default="default_max_jump_force_per_frame")]
    // pub max_jump_force_per_frame: f32,
    // /// Max portion of the left/right nudge force per frame
    // #[serde(default="default_max_nudge_force_per_frame")]
    // pub max_nudge_force_per_frame: f32,
    // /// Pressure used to keep hopper on roof
    // #[serde(default="default_downward_pressure")]
    // pub downward_pressure: f32,
    // /// Speed at which hopper transitions between rising, peaking and falling.
    // #[serde(default="default_peaking_threshold")]
    // pub peaking_threshold: f32,
    // /// how far above the roof the hopper needs to be
    // /// before roof collision is enabled.
    // #[serde(default="default_hopper_position_leeway")]
    // pub hopper_position_leeway: f32,
)
